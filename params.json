{"name":"Rails4 Starter Kit","tagline":"Rails 4.1 Starter App with Devise, OmniAuth, CanCan, Sidekiq and other goodies","body":"README\r\n======\r\n\r\nThe goal of this skeleton project is to provide rock solid security and performance\r\nwithout significant configuration or rewriting code. It is currently used in\r\nseveral production apps.\r\n\r\n## Features\r\n\r\n* [BEM CSS](http://bem.info/method/) â€“ makes it easier to search and replace and maintain larger CSS projects\r\n\r\n\r\n## Setup\r\n\r\nInstall StarkerKit:\r\n\r\n```bash\r\ngit clone https://github.com/10hacks/rails4-starterkit.git\r\ncd rails4-starterkit\r\nbundle install\r\n\r\n# For OSX\r\ngem install rb-fsevent\r\n\r\n# For Linux\r\ngem install rb-inotify\r\n\r\n# Make sure postgresql and redis are running locally, then\r\nrake db:setup\r\n\r\n\r\n```\r\n\r\nUpdate local development security tokens:\r\n\r\n1. Replace security tokens in `config/application.yml`\r\n  1. For each of DEVISE_SECRET_KEY, DEVISE_PEPPER, and SECRET_KEY_BASE generate a new key:\r\n    1. `rake secret`\r\n\r\nProduction server security tokens should be set as ENV vars.\r\n\r\nRename your app:\r\n\r\n1. Search and replace `StarterKit` with your app name\r\n\r\nAdd additional account fields as needed:\r\n\r\n1. Edit RegistrationController and migrations to customize User fields\r\n\r\n\r\nSpring is enabled by default. To use Zeus, comment out spring gems in Gemfile and\r\nuncomment zeus.\r\n\r\n```bash\r\n# Spring\r\nrails server\r\nbundle exec guard\r\nbin/rspec spec/\r\n\r\n# Zeus\r\nzeus start\r\nzeus server\r\nbundle exec guard\r\nzeus test spec/\r\n```\r\n\r\n## Configuring\r\n\r\nAll app specific configuration is located in `config/application.yml`.\r\n\r\nKeys in the `defaults.env` section are automatically overridden by any ENV vars\r\nwith the same name. Set defaults in the `application.yml` file to development\r\nvalues and then set ENV vars on production and staging servers.\r\n\r\n\r\n## Github\r\n\r\nIf you're using Github you probably want to add an upstream remote to\r\nkeep in sync with StarterKit changes.\r\n\r\n```bash\r\ngit remote add upstream https://github.com/10hacks/rails4-starterkit.git\r\n\r\n# Fetch latest upstream changes\r\ngit fetch upstream\r\n```\r\n\r\n## Heroku\r\n\r\n```bash\r\nheroku create [app name]\r\n\r\n# Copy and paste\r\nheroku addons:add heroku-postgresql\r\nheroku addons:add memcachier\r\nheroku addons:add newrelic\r\nheroku addons:add pgbackups\r\nheroku addons:add redistogo\r\nheroku addons:add sendgrid\r\nheroku config:add DEVISE_SECRET_KEY=\"$(bundle exec rake secret)\"\r\nheroku config:add DEVISE_PEPPER=\"$(bundle exec rake secret)\"\r\nheroku config:add SECRET_KEY_BASE=\"$(bundle exec rake secret)\"\r\n\r\n# Needs customization\r\nheroku config:add MAIL_HOST=[YOUR APP URL]\r\n\r\ngit push heroku master\r\n\r\nheroku run rake db:migrate\r\nheroku open\r\n\r\n# Be sure to configure social login keys to get Facebook/Twitter/etc. login to work.\r\n```\r\n\r\n\r\n## Install Errbit\r\n\r\nStarterKit is setup to use Airbrake or Errbit for error tracking and reporting.\r\n\r\nSee [https://github.com/errbit/errbit](https://github.com/errbit/errbit) for installation.\r\n\r\nA common approach for production is to run StarterKit and Errbit as separate Heroku apps.\r\n\r\nAfter setting up Airbrake or Errbit, update your server ENV vars.\r\n\r\n```bash\r\n# In rails4-starterkit dir\r\n\r\nheroku config:add AIRBRAKE_API_KEY=[YOUR KEY]\r\nheroku config:add AIRBRAKE_HOST=[YOUR-ERRBIT-APP.herokuapp.com]\r\n\r\n# Send test\r\nrake airbrake:test\r\n```\r\n\r\n\r\n## Update Gems\r\n\r\nStarterKit Gemfile does not specify gem versions in order to make upgrading easier.\r\n\r\n```bash\r\nbundle update\r\n```\r\n\r\n\r\n## Demo\r\n\r\nTwitter demo app credentials uses a callback url of http://0.0.0.0:3000/auth/twitter/callback\r\n\r\n\r\nTODO\r\n====\r\n\r\n* add support for username\r\n* Setup Rack::Cache https://devcenter.heroku.com/articles/rack-cache-memcached-rails31\r\n* Install Devise Security Extension https://github.com/phatworx/devise_security_extension\r\n* Review config/initializers/devise.rb\r\n* Convert to lazy registration https://github.com/mwlang/lazy_registration_demos\r\n* Use decorators https://github.com/drapergem/draper\r\n* Make sure rspecs follow best practices: http://betterspecs.org/\r\n* Run should_clean -d spec/\r\n\r\n\r\nCompatibility\r\n=============\r\n\r\n* IE 8+ unless additional shims are added\r\n  * See app/assets/stylesheets/icons_social.scss\r\n\r\n\r\nConfigure\r\n=========\r\n\r\nReplace values in config/env.rb with development values or delete the file if not needed.\r\n\r\nDebugging\r\n=========\r\n\r\nUse `byebug` instead of `debugger`.\r\n\r\n\r\nSidekiq\r\n=======\r\n\r\nFor demo on Heroku, StarterKit spawns a sidekiq worker in the web dyno.\r\n\r\nTo use traditional workers in their own dyno, modify Procfile and config/unicorn.rb\r\n\r\n\r\nAuth Flows\r\n==========\r\n\r\n* origin = page user was on when auth flow started\r\n* after auth = page where user can be prompted to enter any\r\n  additional required account info like email address\r\n\r\n### Sign Up\r\n\r\nStart at /a/signup\r\n\r\n**OAuth:**\r\n\r\n1. RegistrationsController#after_auth\r\n2. If user.valid?, redirect to origin or user_root_path\r\n3. If user.invalid?, show interrupt page so user can add additional info\r\n  1. Post to RegistrationsController#create\r\n\r\nIf user already had an account via the OAuth provider, he/she is simply logged in.\r\n\r\n**Username/Password:**\r\n\r\n1. Post to RegistrationsController#create\r\n2. Redirect to origin or user_root_path\r\n\r\n\r\n### Login\r\n\r\n**OAuth:**\r\n\r\nIf user does not already have an account via the OAuth provider, redirect to signup page.\r\n\r\nOtherwise, login user and redirect to either...\r\n\r\n1. RegistrationsController#after_auth if additional account info is needed\r\n2. Origin page if specified\r\n3. user_root_path\r\n\r\n**Username/Password:**\r\n\r\nSame as OAuth flow above.\r\n\r\n\r\n\r\nPhilosophy\r\n==========\r\n\r\nBDD is fun. Best practices increase productivity. Setting up frameworks is a waste of time.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}